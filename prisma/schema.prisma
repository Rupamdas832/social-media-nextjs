// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String
  published Boolean  @default(false)

  author   Profile? @relation(fields: [authorId], references: [id])
  authorId Int?

  comments Comment[]
  likes    Like[]
}

model Profile {
  id         Int     @id @default(autoincrement())
  bio        String?
  name       String
  userHandle String  @unique
  profilePic String?

  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  posts  Post[]

  following    Follow[] @relation("following")
  currentUsers Follow[] @relation("currentUserFollow")

  comments Comment[]
  likes    Like[]
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String?
  authType AuthType

  profile Profile?
}

model Follow {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  followingId Int
  following   Profile @relation("following", fields: [followingId], references: [id])

  currentUserId Int
  currentUser   Profile @relation("currentUserFollow", fields: [currentUserId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String

  postId Int
  post   Post @relation(fields: [postId], references: [id])

  author   Profile @relation(fields: [authorId], references: [id])
  authorId Int
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId Int
  post   Post @relation(fields: [postId], references: [id])

  author   Profile @relation(fields: [authorId], references: [id])
  authorId Int
}

enum AuthType {
  PASSWORD
  GOOGLE
}
